# This is a basic workflow to help you get started with Actions
name: Deploy via FTP Production

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: üöö Get latest code
        uses: actions/checkout@v3

      - name: üì¶ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: üìÇ Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: üì¶ Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "--no-dev --optimize-autoloader"

      - name: üì¶ Install NPM dependencies
        run: npm ci

      - name: üèóÔ∏è Build Assets with Vite
        run: |
          npm run build

      - name: üì§ Upload via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_PRODUCTION_USERNAME }}
          password: ${{ secrets.FTP_PRODUCTION_PASSWORD }}
          server-dir: "/"
          log-level: verbose
          state-name: ".deployment-state"
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/tests/**
            **/storage/framework/cache/**
            **/storage/framework/sessions/**
            **/storage/framework/views/**
            **/storage/logs/**
            .env.example
            .editorconfig
            .styleci.yml
            .gitignore
            README.md
            phpunit.xml
            package-lock.json
            vite.config.js
            postcss.config.js
            tailwind.config.js
            jsconfig.json